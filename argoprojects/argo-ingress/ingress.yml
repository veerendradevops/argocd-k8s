apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "argocd-server"
  namespace: "argocd"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:178005052210:certificate/a92aa267-f1d8-4df0-9ab1-9955b9134182
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/tags: Name=argocd-ingress
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
  # labels:
  #   app: openmrs
spec:
  tls:
    - hosts: 
       - argo.veerendratholeti.tk
  rules:
  - host: "argo.veerendratholeti.tk"
    http:
      paths:
        - backend:
            service: 
              name: argocd-server
              port: 
                number: 443
          pathType: ImplementationSpecific

###Missed Annotations ###
#alb.ingress.kubernetes.io/conditions.argogrpc

